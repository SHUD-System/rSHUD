// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// polygonArea
double polygonArea(NumericVector X, NumericVector Y);
RcppExport SEXP _rSHUD_polygonArea(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(polygonArea(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// triTopology
NumericMatrix triTopology(NumericMatrix tri);
RcppExport SEXP _rSHUD_triTopology(SEXP triSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tri(triSEXP);
    rcpp_result_gen = Rcpp::wrap(triTopology(tri));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rSHUD_polygonArea", (DL_FUNC) &_rSHUD_polygonArea, 2},
    {"_rSHUD_triTopology", (DL_FUNC) &_rSHUD_triTopology, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rSHUD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
